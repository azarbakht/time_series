plot(sales.2009to2013, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2009-2014")
layout(1:2)
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008")
axis(side =1, at = 1:12)
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006")
axis(side =1, at = 1:12)
?axis
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006")
axis(side =1, 1:12, c("Jan", "Feb")
)
axis(side =1, c("Jan", "Feb"))
?Date
months
months
months.Date()
axis(side =1, 1:12, c("Jan", "Feb", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006")
axis(side =1, 1:12, c("Jan", "Feb", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008")
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008")
layout(2:1)
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008")
layout(2:2)
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008")
layout(2:2)
layout(1:1)
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008")
layout(2)
?layout(2)
?layout(1,2)
layout(1,2)
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008")
layout(1,2:1)
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008")
par(mfrow = c(1, 2))
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008")
par(mfrow = c(1, 2))
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006")
par(new=TRUE)
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008")
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006", colors = "green")
par(new=TRUE)
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006", color = "green")
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006", col = "green")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008", col = "red")
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006", col = "green")
par(new=TRUE)
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008", col = "red")
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006", col = "blue")
par(new=TRUE)
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008", col = "red")
layout(1:1)
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006", col = "blue")
par(new=TRUE)
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008", col = "red")
sales.2006
sales.2008
sales.1992to2007 <- window(sales.month.ts, start=c(1992, 1), end=c(2007, 12))
sales.2008 <- window(sales.month.ts, start=c(2008, 1), end=c(2008, 12))
sales.2009to2013 <- window(sales.month.ts, start=c(2009, 1), end=c(2013, 12))
sales.2006 <- window(sales.month.ts, start=c(2006, 1), end=c(2006, 12))
sales.2006
sales.2008
plot(sales.1992to2007, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 1992-2007")
plot(sales.2009to2013, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2009-2014")
sales.2008
plot(sales.1992to2007, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 1992-2007")
plot(sales.2009to2013, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2009-2014")
layout(1:1)
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006", col = "blue")
par(new=TRUE)
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008", col = "red")
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006", col = "blue")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008", col = "red")
layout(1:2)
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006", col = "blue")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008", col = "red")
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "mult"))
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "mult"))
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "mult"))
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "mult"))
sales.month.ts.decomposed <- decompose(sales.month.ts, type = "mult")
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "mult"))
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "mult"))
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "mult"))
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "mult"))
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "mult"))
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "mult"))
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "mult"))
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "add"))
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "add"))
plot(decompose(sales.month.ts, type = "mult"))
plot(decompose(sales.month.ts))
plot(decompose(sales.month.ts, type = "add"))
sales.month.ts.decomposed <- decompose(sales.month.ts, type = "add")
Trend <- sales.month.ts.decomposed$trend
Seasonal <- sales.month.ts.decomposed$seasonal
ts.plot(cbind(Trend, Trend * Seasonal), lty = 1:2)
ts.plot(cbind(Trend, Trend + Seasonal), lty = 1:2)
ts.plot(cbind(Trend, Trend + Seasonal), lty = 1:2)
ts.plot(cbind(Trend, Trend + Seasonal), lty = 1:2, main = "ss")
ts.plot(cbind(Trend, Trend + Seasonal), lty = 1:2, main = "Superimposed Trend + Seasonality")
ts.plot(cbind(Trend, Trend + Seasonal), lty = 1:2, main = "Superimposed Trend + Seasonality", ylab = "Monthly Sales (millions Dollars)")
layout(1:1)
sales.month.ts.decomposed <- decompose(sales.month.ts, type = "add")
Trend <- sales.month.ts.decomposed$trend
Seasonal <- sales.month.ts.decomposed$seasonal
ts.plot(cbind(Trend, Trend + Seasonal), lty = 1:2, main = "Superimposed Trend + Seasonality", ylab = "Monthly Sales (Million Dollars)")
sales.month.ts.decomposed
str(sales.month.ts.decomposed)
plot(sales.month.ts.decomposed$random)
Noise <- sales.month.ts.decomposed$random
library(plyr)
library(lubridate)
library(ggplot2)
options(stringsAsFactors = FALSE)
# import data
load(url("http://stat565.cwick.co.nz/data/sales.rda"))
class(sales)
head(sales)
tail(sales)
sales <- sales %>% select(value)
# Convert to a Time Series object
sales.month.ts <- ts(sales, start = c(1992, 1), frequency = 12)
head(sales.month.ts)
plot(sales.month.ts)
# create an annual aggregate object
sales <- sales %>% select(sales$value)
sales <- sales %>% select(sales$value)
sales <- sales %>% select(value)
sales <- sales$value
# Convert to a Time Series object
sales.month.ts <- ts(sales, start = c(1992, 1), frequency = 12)
head(sales.month.ts)
plot(sales.month.ts)
# create an annual aggregate object
sales.annual.ts <- aggregate(sales.month.ts)/12
head(sales.annual.ts)
plot(sales.annual.ts)
layout(1:2)
plot(sales.month.ts, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales")
plot(sales.annual.ts, ylab = "Annual Sales (millions Dollars)", main = "Total Annual Sales")
# explore the dip, zoom in to see better resolution
plot(window(sales.month.ts, start=c(2005, 1), end=c(2012, 12)), ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2005-2012")
plot(window(sales.month.ts, start=c(2006, 1), end=c(2011, 12)), ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2007-2011")
plot(window(sales.month.ts, start=c(2007, 1), end=c(2008, 12)), ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2007-2011")
sales.1992to2007 <- window(sales.month.ts, start=c(1992, 1), end=c(2007, 12))
sales.2008 <- window(sales.month.ts, start=c(2008, 1), end=c(2008, 12))
sales.2009to2013 <- window(sales.month.ts, start=c(2009, 1), end=c(2013, 12))
sales.2006 <- window(sales.month.ts, start=c(2006, 1), end=c(2006, 12))
sales.2006
sales.2008
plot(sales.1992to2007, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 1992-2007")
plot(sales.2009to2013, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2009-2014")
layout(1:2)
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006", col = "blue")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008", col = "red")
```
## Decomposition
```{r}
plot(decompose(sales.month.ts))
# plot(decompose(sales.month.ts, type = "add"))
# plot(decompose(sales.month.ts, type = "mult"))
layout(1:1)
sales.month.ts.decomposed <- decompose(sales.month.ts, type = "add")
Trend <- sales.month.ts.decomposed$trend
Seasonal <- sales.month.ts.decomposed$seasonal
Noise <- sales.month.ts.decomposed$random
sales.month.ts.decomposed
str(sales.month.ts.decomposed)
ts.plot(cbind(Trend, Trend + Seasonal), lty = 1:2, main = "Superimposed Trend + Seasonality", ylab = "Monthly Sales (Million Dollars)")
```
In summary,
*  The greatest source of variation in daily temperatures in Corvallis is the annual pattern, warm temperatures in the summer, cool in the winter.
*  There doesn't appear to be a systematic trend in the temperatures, although 2008 & 2009 appeared to be cooler than average
*  The serial correlation of daily temperatures (beyond the seasonal norms and trend) is high but falls rapidly and is negligible on a time scale of two weeks.
*  The variation in temperature is higher during the winter but shows no long term changes.
layout(1:1)
sales.month.ts.decomposed <- decompose(sales.month.ts, type = "add")
Trend <- sales.month.ts.decomposed$trend
Seasonal <- sales.month.ts.decomposed$seasonal
Noise <- sales.month.ts.decomposed$random
str(sales.month.ts.decomposed)
ts.plot(cbind(Trend, Trend + Seasonal), lty = 1:2, main = "Superimposed Trend + Seasonality", ylab = "Monthly Sales (Million Dollars)")
```
acf(Noise)
Noise <- sales.month.ts.decomposed$random
Noise
act
?acf
acf(Noise, na.action = na.pass)$ac
acf(Noise, na.action = na.pass)
act(Noise, na.action = na.fail)
acf(Noise, na.action = na.fail)
acf(Noise, na.action = na.pass)$acf[2]
acf(Noise, na.action = na.pass)$acf[1]
acf(Noise, na.action = na.pass)$acf[2]
acf(Noise, na.action = na.pass)$acf[1:10]
range(Noise)
length(Noise)
plot(Noise[1:length(Noise)-1], Noise[2:length(Noise)])
acf(Noise,type = c("covariance"), na.action = na.pass)
acf(Noise,type = c("covariance"), na.action = na.pass)$acf[2]
# scatterplot of each autocorrelation for lag 1
# length(Noise)
plot(Noise[1:length(Noise)-1], Noise[2:length(Noise)])
acf(Noise, na.action = na.pass)
acf(Noise, na.action = na.pass, main = "Correlogram of Residual Noise")
plot(Noise[1:length(Noise)-1], Noise[2:length(Noise)], xlab = "Time 1...t-1", ylab = "Time 2...t")
plot(Noise[1:length(Noise)-1], Noise[2:length(Noise)], xlab = "Noise values at times 1...t-1", ylab = "Noise values at times 2...t")
plot(Noise[1:length(Noise)-1], Noise[2:length(Noise)], xlab = "Noise values at times 1...t-1", ylab = "Noise values at times 2...t", main = "Scatterplot of each autocorrelation for lag 1 to investigate correlation")
plot(Noise[1:length(Noise)-1], Noise[2:length(Noise)], xlab = "Noise values at times 1...t-1", ylab = "Noise values at times 2...t", main = "Scatterplot of each autocorrelation for lag 1 to check for correlation")
plot(Noise[1:length(Noise)-1], Noise[2:length(Noise)], xlab = "Noise values at times 1...t-1", ylab = "Noise values at times 2...t", main = "Scatterplot of each autocorrelation for lag 1 to check for correlations")
# get autocovariances
acf(Noise,type = c("covariance"), na.action = na.pass)$acf[2]
acf(Noise,type = c("covariance"), na.action = na.pass)$acf[2]
# length(Noise)
plot(Noise[1:length(Noise)-1], Noise[2:length(Noise)], xlab = "Noise values at times 1...t-1", ylab = "Noise values at times 2...t", main = "Scatterplot of each autocorrelation for lag 1 to check for correlations")
# get autocovariances
acf(Noise,type = c("covariance"), na.action = na.pass)$acf[2]
# correlogram
acf(Noise, na.action = na.pass, main = "Correlogram of Residual Noise")
plot(decompose(Noise))
plot(Noise^2)
plot(decompose(Noise^2))
plot(decompose(Noise))
plot(Noise^2)
plot(decompose(Noise))
acf(Noise,type = c("covariance"), na.action = na.pass)$acf[2]
acf(Noise,type = c("covariance"), na.action = na.pass)$acf[1]
acf(Noise,type = c("covariance"), na.action = na.pass)$acf[2]
acf(Noise,type = c("covariance"), na.action = na.pass)$acf[2]
acf(Noise, na.action = na.pass, , lag.max = 100, main = "Correlogram of Residual Noise")
acf(Noise,type = c("correlation"), na.action = na.pass)$acf[2]
covariance
acf(Noise,type = c("covariance"), na.action = na.pass)$acf[2]
acf(Noise, na.action = na.pass, , lag.max = 100, main = "Correlogram of Residual Noise")
load(url("http://stat565.cwick.co.nz/data/sales.rda"))
sales <- sales$value
sales.month.ts <- ts(sales, start = c(1992, 1), frequency = 12)
plot(sales.month.ts)
sales.month.ts <- ts(sales, start = c(1992, 1), frequency = 12)
# head(sales.month.ts)
plot(sales.month.ts, ylab = "Monthly Sales (Million Dollars)", main = "Total Monthly Sales")
plot(sales.month.ts, ylab = "Monthly Sales (Million Dollars)", xlab = "Year", main = "Total Monthly Sales")
# create an annual aggregate object
sales.annual.ts <- aggregate(sales.month.ts)/12
layout(1:2)
plot(sales.month.ts, ylab = "Monthly Sales (Million Dollars)", xlab = "Year", main = "Total Monthly Sales")
plot(sales.annual.ts, ylab = "Annual Sales (Million Dollars)", xlab = "Year", main = "Total Annual Sales")
layout(1:1)
plot(sales.month.ts, ylab = "Monthly Sales (Million Dollars)", xlab = "Year", main = "Total Monthly Sales")
plot(sales.annual.ts, ylab = "Annual Sales (Million Dollars)", xlab = "Year", main = "Total Annual Sales")
plot(window(sales.month.ts, start=c(2005, 1), end=c(2012, 12)), ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2005-2012")
plot(window(sales.month.ts, start=c(2006, 1), end=c(2011, 12)), ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2007-2011")
plot(window(sales.month.ts, start=c(2007, 1), end=c(2008, 12)), ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2007-2011")
sales.1992to2007 <- window(sales.month.ts, start=c(1992, 1), end=c(2007, 12))
sales.2008 <- window(sales.month.ts, start=c(2008, 1), end=c(2008, 12))
sales.2009to2013 <- window(sales.month.ts, start=c(2009, 1), end=c(2013, 12))
sales.2006 <- window(sales.month.ts, start=c(2006, 1), end=c(2006, 12))
sales.2006
sales.2008
plot(sales.1992to2007, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 1992-2007")
plot(sales.2009to2013, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2009-2014")
plot(sales.2006, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2006", col = "blue")
plot(sales.2008, ylab = "Monthly Sales (millions Dollars)", main = "Total Monthly Sales for 2008", col = "red")
layout(1:1)
sales.month.ts.decomposed <- decompose(sales.month.ts, type = "add")
Trend <- sales.month.ts.decomposed$trend
Seasonal <- sales.month.ts.decomposed$seasonal
Noise <- sales.month.ts.decomposed$random
str(sales.month.ts.decomposed)
ts.plot(cbind(Trend, Trend + Seasonal), lty = 1:2, main = "Superimposed Trend + Seasonality", ylab = "Monthly Sales (Million Dollars)")
plot(decompose(Noise))
plot(Noise^2)
# let's decompose the noise to see if there's any trends
plot(decompose(Noise))
acf(Noise, na.action = na.pass, , lag.max = 100, main = "Correlogram of Residual Noise")
acf(Noise, na.action = na.pass, lag.max = 100, main = "Correlogram of Residual Noise")
plot(decompose(Noise))
plot(Noise.decomposed, main = "Decomposed Residual Noise")
Noise.decomposed <- decompose(Noise)
plot(Noise.decomposed, main = "Decomposed Residual Noise")
plot(Noise.decomposed)
plot(Noise.decomposed$trend)
plot(Noise.decomposed$trend, main = "xd")
warning = FALSE, results = "show", fig.height = 3, fig.width = 6)
plot(sales.month.ts, ylab = "Monthly Sales (Million Dollars)", xlab = "Year", main = "Total Monthly Sales")
plot(sales.annual.ts, ylab = "Annual Sales (Million Dollars)", xlab = "Year", main = "Total Annual Sales")
plot(sales.month.ts, ylab = "Monthly Sales (Million Dollars)", xlab = "Year", main = "Total Monthly Sales")
set.seed(1)
w <- rnorm(100)
plot(w, type = "1")
plot(w, type = "l")
?dnorm
dnorm(x, mean = 0, sd = 1, log = FALSE)
dnorm(w, mean = 0, sd = 1, log = FALSE)
w2 <- dnorm(w, mean = 0, sd = 1, log = FALSE)
plot(w2, type = "l")
plot(w, type = "l")
w2 <- dnorm(w, mean = 0, sd = 1, log = FALSE)
w2 <- dnorm(w, mean = 0, sd = 1, log = FALSE)
plot(w2, type = "l")
w <- rnorm(100)
w <- rnorm(100); plot(w, type = "l")
set.seed(1)
w <- rnorm(100); plot(w, type = "l")
w <- rnorm(100); plot(w, type = "l")
w <- rnorm(100); plot(w, type = "l")
w <- rnorm(100); plot(w, type = "l")
set.seed(1)
w <- rnorm(100); plot(w, type = "l")
w <- rnorm(100); plot(w, type = "l")
w <- rnorm(100); plot(w, type = "l")
w <- rnorm(100); plot(w, type = "l")
w <- rnorm(100); plot(w, type = "l")
set.seed(1)
# rnorm simulates 100 random variables that are standard normal and independent
# which can be used as a Gaussian WN TS of length 100
w <- rnorm(100); plot(w, type = "l")
set.seed(1)
w <- rnorm(100); plot(w, type = "l")
x <- seq(-3,3, length = 1000); hist(rnorm(100), prob = T); points(x, dnorm(x), type = "l")
x <- seq(-3,3, length = 1000); hist(rnorm(100), prob = T); points(x, dnorm(x), type = "l")
x <- seq(-3,3, length = 1000); hist(rnorm(100), prob = T); points(x, dnorm(x), type = "l")
x <- seq(-3,3, length = 1000); hist(rnorm(100), prob = T); points(x, dnorm(x), type = "l")
x <- seq(-3,3, length = 1000); hist(rnorm(100), prob = T); points(x, dnorm(x), type = "l")
x <- seq(-3,3, length = 1000);
hist(rnorm(100), prob = T); points(x, dnorm(x), type = "l")
x <- seq(-3,3, length = 1000)
hist(rnorm(100), prob = T)
points(x, dnorm(x), type = "l")
x
acf(rnorm(200))
set.seed(200)
acf(rnorm(200))
set.seed(200)
acf(rnorm(200))
x <- w <- rnorm(1000)
for (t in 2:1000) x[t] <- x[t - 1] + w[t]
plot(x, type = "l")
acf(x)
acf(diff(x))
?diff
www <- "http://www.massey.ac.nz/~pscowper/ts/HP.txt"
HP.dat <- read.table(www, header = T) ; attach(HP.dat)
plot (as.ts(Price))
www <- "http://www.massey.ac.nz/~pscowper/ts/HP.txt"
HP.dat <- read.table(www, header = T)
plot (as.ts(HP.dat$Price))
HP.dat <- read.table("http://www.massey.ac.nz/~pscowper/ts/HP.txt", header = T)
HP.dat <- read.table("http://staff.elena.aut.ac.nz/Paul-Cowpertwait/ts/HP.txt", header = T)
attach(HP.dat)
plot (as.ts(HP.dat$Price))
DP <- diff(Price) ; plot (as.ts(DP)) ; acf (DP)
mean(DP) + c(-2, 2) * sd(DP)/sqrt(length(DP))
# HP stock prices
HP.dat <- read.table("http://staff.elena.aut.ac.nz/Paul-Cowpertwait/ts/HP.txt", header = T)
attach(HP.dat)
plot (as.ts(HP.dat$Price))
DP <- diff(Price) ; plot (as.ts(DP)) ; acf (DP)
HP.dat <- read.table("http://staff.elena.aut.ac.nz/Paul-Cowpertwait/ts/HP.txt", header = T)
attach(HP.dat)
plot (as.ts(HP.dat$Price))
DP <- diff(Price)
plot (as.ts(DP))
acf(DP)
plot (as.ts(DP))
mean(DP) + c(-2, 2) * sd(DP)/sqrt(length(DP))
# calculate drift parameter \delta
drift <- diff(Price)
plot (as.ts(drift))
acf(drift)
mean(drift) + c(-2, 2) * sd(drift)/sqrt(length(drift))
?polyroot()
polyroot(c(1, 2, 1))
rho <- function(k, alpha) alpha^k
layout(1:2)
plot(0:10, rho(0:10, 0.7), type = "b")
plot(0:10, rho(0:10, -0.7), type = "b")
set.seed(1)
x <- w <- rnorm(100)
for (t in 2:100) x[t] <- 0.7 * x[t - 1] + w[t]
plot(x, type = "l")
acf(x)
pacf(x)
for (t in 2:100) x[t] <- 0.7 * x[t - 1] + w[t]
plot(x, type = "l")
acf(x)
pacf(x)
x.ar <- ar(x, method = "mle")
x.ar$order
x.ar$ar
x.ar$ar + c(-2, 2) * sqrt(x.ar$asy.var)
x.ar$asy.var
str(x.ar)
rho <- function(k, beta) {
q <- length(beta) - 1
if (k > q) ACF <- 0 else {
s1 <- 0; s2 <- 0
for (i in 1:(q-k+1)) s1 <- s1 + beta[i] * beta[i+k]
for (i in 1:(q+1)) s2 <- s2 + beta[i]^2
ACF <- s1 / s2}
ACF}
# an example MA(3) with beta_1 = 0.7
# beta_2 = 0.5 and beta_3 = 0.2
beta <- c(1, 0.7, 0.5, 0.2)
rho.k <- rep(1, 10)
for (k in 1:10) rho.k[k] <- rho(k, beta)
plot(0:10, c(1, rho.k), pch = 4, ylab = expression(rho[k]))
abline(0, 0)
x.ma <- arima(x, order = c(0, 0, 3))
x.ma
x <- read.table("http://staff.elena.aut.ac.nz/Paul-Cowpertwait/ts/pounds_nz.dat", header = T)
x.ts <- ts(x, st = 1991, fr = 4)
x.ts <- ts(x, st = 1991, fr = 4)
x.ma <- arima(x.ts, order = c(0, 0, 1))
x.ma
ar(x.ts)
cf(x.ma$res[-1])
acf(x.ma$res[-1])
set.seed(1)
x <- arima.sim(n = 10000, list(ar = -0.6, ma = 0.5))
coef(arima(x, order = c(1, 0, 1)))
coef(arima(x, order = c(1, 0, 1)))
x.ma <- arima(x.ts, order = c(0, 0, 1))
x.ar <- arima(x.ts, order = c(1, 0, 0))
x.arma <- arima(x.ts, order = c(1, 0, 1))
AIC(x.ma)
AIC(x.ar)
AIC(x.arma)
?AIC
acf(resid(x.arma))
acf(resid(x.arma))
best.order <- c(0, 0, 0)
best.aic <- Inf
for (i in 0:2) for (j in 0:2) {
fit.aic <- AIC(arima(resid(Elec.lm), order = c(i, 0,j)))
if (fit.aic < best.aic) {
best.order <- c(i, 0, j)
best.arma <- arima(resid(Elec.lm), order = best.order)
best.aic <- fit.aic
}
}
ChocolateBeerElectricity <- read.table("http://staff.elena.aut.ac.nz/Paul-Cowpertwait/ts/cbe.dat", header = TRUE)
class(ChocolateBeerElectricity)
str(ChocolateBeerElectricity)
Chocolate.ts <- ts(ChocolateBeerElectricity[,1], start = 1958, frequency = 12)
Beer.ts <- ts(ChocolateBeerElectricity[,2], start = 1958, frequency = 12)
Electricity.ts <- ts(ChocolateBeerElectricity[,3], start = 1958, frequency = 12)
CBE <- read.table("http://staff.elena.aut.ac.nz/Paul-Cowpertwait/ts/cbe.dat", header = T)
Elec.ts <- ts(CBE[, 3], start = 1958, freq = 12)
Time <- 1:length(Elec.ts)
Imth <- cycle(Elec.ts)
Elec.lm <- lm(log(Elec.ts) ~ Time + I(Time^2) + factor(Imth))
acf(resid(Elec.lm))
best.order <- c(0, 0, 0)
best.aic <- Inf
for (i in 0:2) for (j in 0:2) {
fit.aic <- AIC(arima(resid(Elec.lm), order = c(i, 0,j)))
if (fit.aic < best.aic) {
best.order <- c(i, 0, j)
best.arma <- arima(resid(Elec.lm), order = best.order)
best.aic <- fit.aic
}
}
best.order
acf(resid(best.arma))
new.time <- seq(length(Elec.ts), length = 36)
new.data <- data.frame(Time = new.time, Imth = rep(1:12,3))
predict.lm <- predict(Elec.lm, new.data)
predict.arma <- predict(best.arma, n.ahead = 36)
elec.pred <- ts(exp(predict.lm + predict.arma$pred), start = 1991, freq = 12)
ts.plot(cbind(Elec.ts, elec.pred), lty = 1:2)
best.order
# correlogram
acf(resid(best.arma))
predict.lm <- predict(Elec.lm, new.data)
predict.arma <- predict(best.arma, n.ahead = 36)
elec.pred <- ts(exp(predict.lm + predict.arma$pred), start = 1991, freq = 12)
ts.plot(cbind(Elec.ts, elec.pred), lty = 1:2)
## prediction
new.time <- seq(length(Elec.ts), length = 36)
new.data <- data.frame(Time = new.time, Imth = rep(1:12,3))
# predict using the fitted regression model of class lm
predict.lm <- predict(Elec.lm, new.data)
# predict using the fitted ARMA model, number of timesteps ahead to predict; here = 36 ~ predict for the next three years
predict.arma <- predict(best.arma, n.ahead = 36)
# convert the predicted values to TS object
elec.pred <- ts(exp(predict.lm + predict.arma$pred), start = 1991, freq = 12)
ts.plot(cbind(Elec.ts, elec.pred), lty = 1:2)
